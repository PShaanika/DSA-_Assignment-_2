import ballerina/http; // Import HTTP module for creating HTTP clients
import ballerina/io; // Import IO library to handle input and output operations

// Define the structure of a shipment detail record
// This record holds all necessary details for a shipment
type ShipmentDetails record {
    string shipmentType; // Type of shipment (e.g., standard, express)
    string pickupLocation; // Pickup location
    string deliveryLocation; // Delivery location
    string preferredTimeSlot; // Preferred delivery time slot
    string firstName; // First name of the customer
    string lastName; // Last name of the customer
    string contactNumber; // Contact number of the customer
    string trackingNumber; // Unique tracking number for the shipment
};

// Define the structure of a shipment confirmation record
// This record is used to confirm shipment details and update statuses
type ShipmentConfirmation record {
    string confirmationId; // Confirmation ID, same as the tracking number
    string shipmentType; // Type of shipment confirmed
    string pickupLocation; // Pickup location of the shipment
    string deliveryLocation; // Delivery location of the shipment
    string estimatedDeliveryTime; // Estimated time of delivery
    string status; // Status of the shipment (e.g., 'Confirmed')
};

// Initialize an HTTP client to interact with the intergalactic logistics service
// This client connects to the cosmic logistics service exposed at http://localhost:9090/cosmic_logistics
http:Client cosmicLogisticsPortal = check new("http://localhost:9090/cosmic_logistics");

// Entry point of the client application
public function main() returns error? {
    // Initiate a quantum teleportation request
    check initiateQuantumTeleport(cosmicLogisticsPortal);
}

// Function to send shipment details to the intergalactic logistics service
// Sends a POST request to the /sendPackage endpoint with shipment details
function initiateQuantumTeleport(http:Client hyperClient) returns error? {
    // Create a ShipmentDetails record with all necessary shipment information
    ShipmentDetails quantumRequest = {
        shipmentType: "standard-delivery", // Specify the type of shipment
        pickupLocation: "Andromeda Prime", // Set the pickup location
        deliveryLocation: "Milky Way Outpost Zeta", // Set the delivery location
        preferredTimeSlot: "2-3 parsecs", // Set the preferred delivery time slot
        firstName: "Zorlax", // Set the customer's first name
        lastName: "Nebula Whisperers", // Set the customer's last name
        contactNumber: "42.0x10^23 Hz", // Set the customer's contact number
        trackingNumber: "" // Initialize as empty; will be generated by the server
    };

    // Send a POST request to the cosmic logistics service's /sendPackage resource
    // The request payload is the ShipmentDetails record created above
    string response = check hyperClient->/sendPackage.post(quantumRequest);

    // Log the response received from the cosmic logistics service
    // The response contains the generated tracking number and other details
    io:println("Cosmic Logistics Response: ", response);
}
